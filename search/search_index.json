{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"DANS SWH Deposit Form for Researchers \u00b6 Living Document (WIP), 27 February 2024 This work is carried out in the context of the FC4E project (Data Infrastructure Capacities for EOSC), funded by the EU's Horizon 2020 project call HORIZON-INFRA-2021-EOSC-01. It is developed by Task 6.1: \"API and Connectors Between Scholarly Repositories and Software Heritage\", as part of the working package 6 (WP6): \"Services and tools to archive, reference, describe and cite research software\". Currently, this documentation targets two groups, i.e: Researchers that want to archive software code related data, like source code, related datasets and their metadata. This documentation is the closest thing to a user manual. Developers that need insight in the applications that make up the entire service. This most closely resembles technical documentation.","title":"Home"},{"location":"#dans-swh-deposit-form-for-researchers","text":"Living Document (WIP), 27 February 2024 This work is carried out in the context of the FC4E project (Data Infrastructure Capacities for EOSC), funded by the EU's Horizon 2020 project call HORIZON-INFRA-2021-EOSC-01. It is developed by Task 6.1: \"API and Connectors Between Scholarly Repositories and Software Heritage\", as part of the working package 6 (WP6): \"Services and tools to archive, reference, describe and cite research software\". Currently, this documentation targets two groups, i.e: Researchers that want to archive software code related data, like source code, related datasets and their metadata. This documentation is the closest thing to a user manual. Developers that need insight in the applications that make up the entire service. This most closely resembles technical documentation.","title":"DANS SWH Deposit Form for Researchers"},{"location":"develop_intro/","text":"DANS Deposit Form for Developers \u00b6 Living Document (WIP), 27 February 2024 This work is carried out in the context of the FC4E project (Data Infrastructure Capacities for EOSC), funded by the EU's Horizon 2020 project call HORIZON-INFRA-2021-EOSC-01. It is developed by Task 6.1: \"API and Connectors Between Scholarly Repositories and Software Heritage\", as part of the working package 6 (WP6): \"Services and tools to archive, reference, describe and cite research software\". Sequence Diagram \u00b6","title":"Introduction"},{"location":"develop_intro/#dans-deposit-form-for-developers","text":"Living Document (WIP), 27 February 2024 This work is carried out in the context of the FC4E project (Data Infrastructure Capacities for EOSC), funded by the EU's Horizon 2020 project call HORIZON-INFRA-2021-EOSC-01. It is developed by Task 6.1: \"API and Connectors Between Scholarly Repositories and Software Heritage\", as part of the working package 6 (WP6): \"Services and tools to archive, reference, describe and cite research software\".","title":"DANS Deposit Form for Developers"},{"location":"develop_intro/#sequence-diagram","text":"","title":"Sequence Diagram"},{"location":"research_intro/","text":"DANS SWH Deposit Form for Researchers \u00b6 Caution Please be aware that this is a demo environment for both the underlying Dataverse instance and the SWH archive. This means that there is no guarantee of long-term archiving and that uploaded resources may be deleted at any time. This document contains instructions and prerequisites for depositing your software code and associated datasets to a dataset repository (Dataverse instance) and to the Software Heritage (SWH) archive. This is accomplished by supplying all the information into one input form only. This deposit form takes care of depositing the supplied artifacts and their relevant metadata to both endpoints and will create references to each other by updating the endpoints with the persistent identifier minted and obtained from the deposit endpoints. At the time of writing, the deposit form is connected to the (DANS) Dataverse demo instance. This is where your uploaded files and their relevant metadata will be archived to. The Dataverse target instance may be changed at anytime in the future. Please read the prerequisites carefully before continuing to the deposit manual page.","title":"Introduction"},{"location":"research_intro/#dans-swh-deposit-form-for-researchers","text":"Caution Please be aware that this is a demo environment for both the underlying Dataverse instance and the SWH archive. This means that there is no guarantee of long-term archiving and that uploaded resources may be deleted at any time. This document contains instructions and prerequisites for depositing your software code and associated datasets to a dataset repository (Dataverse instance) and to the Software Heritage (SWH) archive. This is accomplished by supplying all the information into one input form only. This deposit form takes care of depositing the supplied artifacts and their relevant metadata to both endpoints and will create references to each other by updating the endpoints with the persistent identifier minted and obtained from the deposit endpoints. At the time of writing, the deposit form is connected to the (DANS) Dataverse demo instance. This is where your uploaded files and their relevant metadata will be archived to. The Dataverse target instance may be changed at anytime in the future. Please read the prerequisites carefully before continuing to the deposit manual page.","title":"DANS SWH Deposit Form for Researchers"},{"location":"research_manual/","text":"Deposit manual \u00b6 Once you have met the prerequisites , you can start using the deposit form. This page will explain how to use it and what the options are. Once logged into the DANS Deposit form click on the \"Deposit Data\" button, or \"Deposit\" from the top menu bar. Notice that the form is divided into two tabs: \"METADATA\" and \"FILES\". Tooltips \u00b6 In general: The coloured dots provide you with information on the state of a form field (tooltip). Hover over a dot to see a brief description of the field and its current status. = Required field (also indicated with an asterix) = Recommended field, optional = Validated field, good to go Metadata form \u00b6 Available form fields from the Citation Metadata sub form. These fields are either ''Required'' or ''recommended''. This is indicated by the colour of the dots and required fields are additionally marked with an asterix (*). Title field \u00b6 This required is the title of your deposit Subject field \u00b6 This is required field. There are twelve subjects to choose from. The subject is used to classify the dataset. Author field \u00b6 The depositing author name. This is name associated with your login. Software Author field \u00b6 The author of the software code. This may be the same as the depositing author, but may also be different. Email field \u00b6 The email address of the depositing author. This is the email address associated with your login. It cannot be changed here. Additional Author field \u00b6 This field is optional. You can add additional authors of the software code or dataset. There are two types of authors: Dataset authors and Software authors. You can add multiple authors by clicking the \"+ ADD ANOTHER\" button. The author type is indicated by the icon next to the author name. Description field \u00b6 This is a required field. The description of the dataset. This field is used to describe the dataset in more detail. Repository URL field \u00b6 In the current version, only public GitHub repositories are allowed for archival at SWH. Make sure you know which repository (url) you want Software Heritage to archive for you. Other repository types or forges are planned in future releases and will be listed here, when available. Files form \u00b6 The (data)files you are about to deposit, must have one of the formats listed on the DANS webpage about file formats . The file format may appear in either the list of \"Preferred formats\" or the list of \"Non-preferred formats.\" As long as the file format is mentioned in one of the two lists. Save button \u00b6 Use the 'Save' option to save to current state of your form at any time. You will be able to load the field values at some other moment back again to the form. In order to load the form with your saved value's: Click on the dot with your initials on the top right of the form From the drop-down menu choose \"Submissions\" Select a saved from the \"Saved Forms\" table Submit Data button \u00b6 Deposits your form data if validation succeeds. In order to track the progress of the deposit: Click on the dot with your initials on the top right of the form From the drop-down menu choose \"Submissions\" In the \"Submitted forms\" table you can see the progress of your submission to the three endpoints. A green dot with a checkmark indicates a successful submission to that endpoint: Software Heritage - API (SWH Archival request of the gitHub repository and retrieve the SWHID) Dataverse EOSC (Deposit datafile(s) with their relevant metadata, including the SWHID) Software Heritage - SWORD2 (Updates the SWH archive with the Dataverse PID (DOI)) Fields Summary table \u00b6 The table below is an overview of all the form fields, and indicates the target system Fieldname Requirement mapping target Title required Dataverse & SWH Subject optional Dataverse & SWH Author required Dataverse & SWH Email required Dataverse Additional Author optional Dataverse or SWH Repository URL required SWH Description required Dataverse Files optional Dataverse","title":"Deposit Manual"},{"location":"research_manual/#deposit-manual","text":"Once you have met the prerequisites , you can start using the deposit form. This page will explain how to use it and what the options are. Once logged into the DANS Deposit form click on the \"Deposit Data\" button, or \"Deposit\" from the top menu bar. Notice that the form is divided into two tabs: \"METADATA\" and \"FILES\".","title":"Deposit manual"},{"location":"research_manual/#tooltips","text":"In general: The coloured dots provide you with information on the state of a form field (tooltip). Hover over a dot to see a brief description of the field and its current status. = Required field (also indicated with an asterix) = Recommended field, optional = Validated field, good to go","title":"Tooltips"},{"location":"research_manual/#metadata-form","text":"Available form fields from the Citation Metadata sub form. These fields are either ''Required'' or ''recommended''. This is indicated by the colour of the dots and required fields are additionally marked with an asterix (*).","title":"Metadata form"},{"location":"research_manual/#title-field","text":"This required is the title of your deposit","title":"Title field"},{"location":"research_manual/#subject-field","text":"This is required field. There are twelve subjects to choose from. The subject is used to classify the dataset.","title":"Subject field"},{"location":"research_manual/#author-field","text":"The depositing author name. This is name associated with your login.","title":"Author field"},{"location":"research_manual/#software-author-field","text":"The author of the software code. This may be the same as the depositing author, but may also be different.","title":"Software Author field"},{"location":"research_manual/#email-field","text":"The email address of the depositing author. This is the email address associated with your login. It cannot be changed here.","title":"Email field"},{"location":"research_manual/#additional-author-field","text":"This field is optional. You can add additional authors of the software code or dataset. There are two types of authors: Dataset authors and Software authors. You can add multiple authors by clicking the \"+ ADD ANOTHER\" button. The author type is indicated by the icon next to the author name.","title":"Additional Author field"},{"location":"research_manual/#description-field","text":"This is a required field. The description of the dataset. This field is used to describe the dataset in more detail.","title":"Description field"},{"location":"research_manual/#repository-url-field","text":"In the current version, only public GitHub repositories are allowed for archival at SWH. Make sure you know which repository (url) you want Software Heritage to archive for you. Other repository types or forges are planned in future releases and will be listed here, when available.","title":"Repository URL field"},{"location":"research_manual/#files-form","text":"The (data)files you are about to deposit, must have one of the formats listed on the DANS webpage about file formats . The file format may appear in either the list of \"Preferred formats\" or the list of \"Non-preferred formats.\" As long as the file format is mentioned in one of the two lists.","title":"Files form"},{"location":"research_manual/#save-button","text":"Use the 'Save' option to save to current state of your form at any time. You will be able to load the field values at some other moment back again to the form. In order to load the form with your saved value's: Click on the dot with your initials on the top right of the form From the drop-down menu choose \"Submissions\" Select a saved from the \"Saved Forms\" table","title":"Save button"},{"location":"research_manual/#submit-data-button","text":"Deposits your form data if validation succeeds. In order to track the progress of the deposit: Click on the dot with your initials on the top right of the form From the drop-down menu choose \"Submissions\" In the \"Submitted forms\" table you can see the progress of your submission to the three endpoints. A green dot with a checkmark indicates a successful submission to that endpoint: Software Heritage - API (SWH Archival request of the gitHub repository and retrieve the SWHID) Dataverse EOSC (Deposit datafile(s) with their relevant metadata, including the SWHID) Software Heritage - SWORD2 (Updates the SWH archive with the Dataverse PID (DOI))","title":"Submit Data button"},{"location":"research_manual/#fields-summary-table","text":"The table below is an overview of all the form fields, and indicates the target system Fieldname Requirement mapping target Title required Dataverse & SWH Subject optional Dataverse & SWH Author required Dataverse & SWH Email required Dataverse Additional Author optional Dataverse or SWH Repository URL required SWH Description required Dataverse Files optional Dataverse","title":"Fields Summary table"},{"location":"research_prerequisites/","text":"Prerequisites \u00b6 Before you can start using the deposit form, you must successfully complete the three steps described below. Otherwise the deposit form will not submit your data! It is important to go through these steps before your deposit! For now, there are several actions to complete, however, most of them you only have to perform once before you start depositing for the first time. Next time you only have to log in to the deposit input form to be able to deposit again. Step 1: Dataverse account \u00b6 The deposit form will deposit the sourcecode related (meta)data to the connected Dataverse instance on your behalf. To be able to so, you need to supply your Dataverse API-token to the deposit form. Therefore you must have a Dataverse account on the connected (DANS) Dataverse demo instance. If you already have a Dataverse account on the connecting instance, you can skip this step. To register and get your account do the following: Goto the Dataverse demo instance. Goto 'Sign Up' in the right top menu bar. Enter your account information Done. This was a one-time operation. P.s: At the Demo Dataverse you are not required to verify your email. This may be changed at any time. Note Currently the Deposit form is connected to a 'vanilla' Dataverse instance, on which you need to create a classic \"Dataverse account\" with your own choosen username and password. In the near future, the deposit form will likely be connected to instances where you can also log in with your 'Institutional Account\u2019 (Authentication and Authorisation Infrastructure). Step 2: Depost-form account \u00b6 At the time of writing, the Deposit form offers two login methods: Federated login via your Google account. Local account with your email as username. If you do not have a Google account, or do not want to use it, you can create a local account: Goto the DANS Deposit input form Click on the 'LOG IN' button; you will be redirected to the 'Sign in to your account' login form Choose either to 'Sign in' or 'Register' as a (new) user, or choose to 'Sign in with Google' You are now logged in to the DANS Deposit entry form. You only have to take one more step to deposit data! Step 3: Register your Dataverse API-key \u00b6 From the opening screen of the DANS Deposit input form, click on the 'DEPOSIT DATA' button. You arrive at the actual input form. At the top of that screen you will see a yellow box, containing a warning text: Missing or invalid API keys You need to enter your personal API keys to be able to submit this form. Check your settings. Now complete the following steps: Click on 'Check your settings'. In the next screen, click on 'Get you key here'. You will be redirected to the connected Dataverse instance in a new window. Log in with your Dataverse account, that you created in Step 1. Goto your account settings. This can be reached from the 'user account' top right menu bar, displaying your account name. Select the 4th entry: 'API Token'. Click on 'Create Token'. A code consisting of numbers, letters and hyphens will appear (e.g. 'e27338d4-9586-4216-848f-daff9cfcf4c9'). This is your 'API key'. Click on the 'Copy to Clipboard' button. You have now copied your API key. Return to the window with the Deposit form input panel. In the input field that says 'Your personal Dataverse API key', paste the API key you just copied. If all goes well, a green check mark will appear behind the API key. Click on the 'DEPOSIT YOUR DATA' button. If you get a warning that your API key is invalid, check in the Dataverse instance that your account has been successfully verified, see step 1. Once you have completed all of the above steps, you are good to go for depositing your files and source code, which is described in the next step .","title":"Prerequisites"},{"location":"research_prerequisites/#prerequisites","text":"Before you can start using the deposit form, you must successfully complete the three steps described below. Otherwise the deposit form will not submit your data! It is important to go through these steps before your deposit! For now, there are several actions to complete, however, most of them you only have to perform once before you start depositing for the first time. Next time you only have to log in to the deposit input form to be able to deposit again.","title":"Prerequisites"},{"location":"research_prerequisites/#step-1-dataverse-account","text":"The deposit form will deposit the sourcecode related (meta)data to the connected Dataverse instance on your behalf. To be able to so, you need to supply your Dataverse API-token to the deposit form. Therefore you must have a Dataverse account on the connected (DANS) Dataverse demo instance. If you already have a Dataverse account on the connecting instance, you can skip this step. To register and get your account do the following: Goto the Dataverse demo instance. Goto 'Sign Up' in the right top menu bar. Enter your account information Done. This was a one-time operation. P.s: At the Demo Dataverse you are not required to verify your email. This may be changed at any time. Note Currently the Deposit form is connected to a 'vanilla' Dataverse instance, on which you need to create a classic \"Dataverse account\" with your own choosen username and password. In the near future, the deposit form will likely be connected to instances where you can also log in with your 'Institutional Account\u2019 (Authentication and Authorisation Infrastructure).","title":"Step 1: Dataverse account"},{"location":"research_prerequisites/#step-2-depost-form-account","text":"At the time of writing, the Deposit form offers two login methods: Federated login via your Google account. Local account with your email as username. If you do not have a Google account, or do not want to use it, you can create a local account: Goto the DANS Deposit input form Click on the 'LOG IN' button; you will be redirected to the 'Sign in to your account' login form Choose either to 'Sign in' or 'Register' as a (new) user, or choose to 'Sign in with Google' You are now logged in to the DANS Deposit entry form. You only have to take one more step to deposit data!","title":"Step 2: Depost-form account"},{"location":"research_prerequisites/#step-3-register-your-dataverse-api-key","text":"From the opening screen of the DANS Deposit input form, click on the 'DEPOSIT DATA' button. You arrive at the actual input form. At the top of that screen you will see a yellow box, containing a warning text: Missing or invalid API keys You need to enter your personal API keys to be able to submit this form. Check your settings. Now complete the following steps: Click on 'Check your settings'. In the next screen, click on 'Get you key here'. You will be redirected to the connected Dataverse instance in a new window. Log in with your Dataverse account, that you created in Step 1. Goto your account settings. This can be reached from the 'user account' top right menu bar, displaying your account name. Select the 4th entry: 'API Token'. Click on 'Create Token'. A code consisting of numbers, letters and hyphens will appear (e.g. 'e27338d4-9586-4216-848f-daff9cfcf4c9'). This is your 'API key'. Click on the 'Copy to Clipboard' button. You have now copied your API key. Return to the window with the Deposit form input panel. In the input field that says 'Your personal Dataverse API key', paste the API key you just copied. If all goes well, a green check mark will appear behind the API key. Click on the 'DEPOSIT YOUR DATA' button. If you get a warning that your API key is invalid, check in the Dataverse instance that your account has been successfully verified, see step 1. Once you have completed all of the above steps, you are good to go for depositing your files and source code, which is described in the next step .","title":"Step 3: Register your Dataverse API-key"}]}